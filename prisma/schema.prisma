generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int                @id @default(autoincrement())
  username             String             @unique @db.VarChar(50)
  password             String             @db.VarChar(255)
  name                 String             @db.VarChar(100)
  email                String?            @db.VarChar(100)
  isActive             Boolean            @default(true) @map("is_active")
  createdAt            DateTime           @default(now()) @map("created_at")
  updatedAt            DateTime           @updatedAt @map("updated_at")
  role                 UserRole           @default(inspeksi_mesin)
  jobType              UserJobType?       @map("job_type")
  barang               Barang[]
  approvedBarangKeluar BarangKeluar[]     @relation("ApprovedBy")
  barangKeluar         BarangKeluar[]
  barangMasuk          BarangMasuk[]
  jenisBarang          JenisBarang[]
  pindahLokasi         PindahLokasi[]
  pindahLokasiForm     PindahLokasiForm[]
  transaksi            Transaksi[]

  @@map("users")
}

model JenisBarang {
  id          Int      @id @default(autoincrement())
  nama        String   @db.VarChar(100)
  deskripsi   String?
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  createdById Int?     @map("created_by")
  barang      Barang[]
  createdBy   User?    @relation(fields: [createdById], references: [id])

  @@map("jenis_barang")
}

model Barang {
  id                 Int                  @id
  kode               String               @unique @db.VarChar(20)
  nama               String               @db.VarChar(100)
  satuan             String?              @db.VarChar(20)
  stok               Int                  @default(0)
  stokMinimum        Int                  @default(0) @map("stok_minimum")
  lokasi             String?              @db.VarChar(100)
  deskripsi          String?
  isActive           Boolean              @default(true) @map("is_active")
  createdAt          DateTime             @default(now()) @map("created_at")
  updatedAt          DateTime             @updatedAt @map("updated_at")
  jenisId            Int?                 @map("jenis_id")
  createdById        Int?                 @map("created_by")
  createdBy          User?                @relation(fields: [createdById], references: [id])
  jenis              JenisBarang?         @relation(fields: [jenisId], references: [id])
  detailBarangKeluar DetailBarangKeluar[]
  detailBarangMasuk  DetailBarangMasuk[]

  @@map("barang")
}

model BarangMasuk {
  id                Int                 @id @default(autoincrement())
  tanggal           DateTime            @default(now())
  isActive          Boolean             @default(true) @map("is_active")
  createdAt         DateTime            @default(now()) @map("created_at")
  updatedAt         DateTime            @updatedAt @map("updated_at")
  createdById       Int?                @map("created_by")
  kodeKedatangan    String?             @unique @map("kode_kedatangan") @db.VarChar(50)
  namaSupplier      String?             @map("nama_supplier") @db.VarChar(100)
  noForm            String?             @map("no_form") @db.VarChar(50)
  status            String?             @db.VarChar(50)
  createdBy         User?               @relation(fields: [createdById], references: [id])
  detailBarangMasuk DetailBarangMasuk[]

  @@map("barang_masuk")
}

model DetailBarangMasuk {
  id            Int                       @id @default(autoincrement())
  jumlah        Int
  createdAt     DateTime                  @default(now()) @map("created_at")
  barangMasukId Int                       @map("barang_masuk_id")
  barangId      Int                       @map("barang_id")
  barang        Barang                    @relation(fields: [barangId], references: [id])
  barangMasuk   BarangMasuk               @relation(fields: [barangMasukId], references: [id])
  noSeriList    DetailBarangMasukNoSeri[]

  @@map("detail_barang_masuk")
}

model DetailBarangMasukNoSeri {
  id                  Int                  @id @default(autoincrement())
  noSeri              String               @unique @map("no_seri") @db.VarChar(100)
  detailBarangMasukId Int                  @map("detail_barang_masuk_id")
  createdAt           DateTime             @default(now()) @map("created_at")
  lokasi              String?              @db.VarChar(100)
  keterangan          String?              @db.VarChar(255)
  detailBarangKeluar  DetailBarangKeluar[]
  detailBarangMasuk   DetailBarangMasuk    @relation(fields: [detailBarangMasukId], references: [id], onDelete: Cascade)
  fotoAssembly        FotoAssembly[]
  fotoInspeksi        FotoInspeksi[]
  fotoPainting        FotoPainting[]
  FotoPDI             FotoPDI[]
  fotoPindahLokasi    FotoPindahLokasi[]
  fotoQC              FotoQC[]
  pindahLokasi        PindahLokasi[]
  pindahLokasiForm    PindahLokasiForm[]
  transaksi           Transaksi[]

  @@map("detail_barang_masuk_no_seri")
}

model BarangKeluar {
  id                 Int                  @id @default(autoincrement())
  tanggal            DateTime             @default(now())
  noTransaksi        String               @unique @map("no_transaksi") @db.VarChar(50)
  tujuan             String?              @db.VarChar(100)
  keterangan         String?
  status             String               @default("pending") @db.VarChar(20)
  isActive           Boolean              @default(true) @map("is_active")
  createdAt          DateTime             @default(now()) @map("created_at")
  updatedAt          DateTime             @updatedAt @map("updated_at")
  createdById        Int?                 @map("created_by")
  approvedById       Int?                 @map("approved_by")
  deliveryNo         String?              @map("delivery_no") @db.VarChar(50)
  shipVia            String?              @map("ship_via") @db.VarChar(100)
  approvedBy         User?                @relation("ApprovedBy", fields: [approvedById], references: [id])
  createdBy          User?                @relation(fields: [createdById], references: [id])
  detailBarangKeluar DetailBarangKeluar[]

  @@map("barang_keluar")
}

model DetailBarangKeluar {
  id                        Int                     @id @default(autoincrement())
  jumlah                    Int
  createdAt                 DateTime                @default(now()) @map("created_at")
  barangKeluarId            Int                     @map("barang_keluar_id")
  barangId                  Int                     @map("barang_id")
  detailBarangMasukNoSeriId Int                     @map("detail_barang_masuk_no_seri_id")
  barang                    Barang                  @relation(fields: [barangId], references: [id])
  barangKeluar              BarangKeluar            @relation(fields: [barangKeluarId], references: [id])
  detailBarangMasukNoSeri   DetailBarangMasukNoSeri @relation(fields: [detailBarangMasukNoSeriId], references: [id])

  @@map("detail_barang_keluar")
}

model Transaksi {
  id                        Int                     @id @default(autoincrement())
  tanggal                   DateTime                @default(now())
  noForm                    String?                 @map("no_form") @db.VarChar(50)
  jenisPekerjaan            String?                 @map("jenis_pekerjaan") @db.VarChar(100)
  staff                     String?                 @db.VarChar(100)
  status                    String                  @default("pending") @db.VarChar(20)
  qty                       Int                     @default(1)
  ket                       String?
  lokasi                    String?                 @db.VarChar(100)
  isActive                  Boolean                 @default(true) @map("is_active")
  createdAt                 DateTime                @default(now()) @map("created_at")
  updatedAt                 DateTime                @updatedAt @map("updated_at")
  detailBarangMasukNoSeriId Int                     @map("detail_barang_masuk_no_seri_id")
  createdById               Int?                    @map("created_by")
  approvedAt                DateTime?               @map("approved_at")
  approvedBy                String?                 @map("approved_by") @db.VarChar(100)
  isApproved                Boolean                 @default(false) @map("is_approved")
  tipeMesin                 String?                 @map("tipe_mesin") @db.VarChar(100)
  assemblyData              AssemblyData[]
  inspeksiData              InspeksiData[]
  paintingData              PaintingData[]
  pdiData                   PDIData[]
  qcData                    QCData[]
  createdBy                 User?                   @relation(fields: [createdById], references: [id])
  detailBarangMasukNoSeri   DetailBarangMasukNoSeri @relation(fields: [detailBarangMasukNoSeriId], references: [id], onDelete: Cascade)

  @@map("transaksi")
}

model InspeksiData {
  id          Int       @id @default(autoincrement())
  parameter   String    @db.VarChar(200)
  hasil       Boolean   @default(false)
  keterangan  String?
  isActive    Boolean   @default(true) @map("is_active")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  transaksiId Int       @map("transaksi_id")
  transaksi   Transaksi @relation(fields: [transaksiId], references: [id], onDelete: Cascade)

  @@map("inspeksi_data")
}

model AssemblyData {
  id          Int       @id @default(autoincrement())
  parameter   String    @db.VarChar(200)
  hasil       Boolean   @default(false)
  keterangan  String?
  isActive    Boolean   @default(true) @map("is_active")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  transaksiId Int       @map("transaksi_id")
  transaksi   Transaksi @relation(fields: [transaksiId], references: [id], onDelete: Cascade)

  @@map("assembly_data")
}

model PaintingData {
  id          Int       @id @default(autoincrement())
  parameter   String    @db.VarChar(200)
  hasil       Boolean   @default(false)
  keterangan  String?
  isActive    Boolean   @default(true) @map("is_active")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  transaksiId Int       @map("transaksi_id")
  transaksi   Transaksi @relation(fields: [transaksiId], references: [id], onDelete: Cascade)

  @@map("painting_data")
}

model QCData {
  id          Int       @id @default(autoincrement())
  parameter   String    @db.VarChar(200)
  aktual      String?   @db.VarChar(200)
  standar     String?   @db.VarChar(200)
  isActive    Boolean   @default(true) @map("is_active")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  transaksiId Int       @map("transaksi_id")
  transaksi   Transaksi @relation(fields: [transaksiId], references: [id], onDelete: Cascade)

  @@map("qc_data")
}

model PDIData {
  id          Int       @id @default(autoincrement())
  parameter   String    @db.VarChar(200)
  pdi         Boolean   @default(false)
  keterangan  String?
  isActive    Boolean   @default(true) @map("is_active")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  transaksiId Int       @map("transaksi_id")
  transaksi   Transaksi @relation(fields: [transaksiId], references: [id], onDelete: Cascade)

  @@map("pdi_data")
}

model FotoInspeksi {
  id                        Int                     @id @default(autoincrement())
  fileName                  String                  @map("file_name") @db.VarChar(255)
  fileUrl                   String                  @map("file_url") @db.VarChar(500)
  fileSize                  Int                     @map("file_size")
  fileType                  String                  @map("file_type") @db.VarChar(100)
  keterangan                String?
  isActive                  Boolean                 @default(true) @map("is_active")
  createdAt                 DateTime                @default(now()) @map("created_at")
  updatedAt                 DateTime                @updatedAt @map("updated_at")
  detailBarangMasukNoSeriId Int                     @map("detail_barang_masuk_no_seri_id")
  detailBarangMasukNoSeri   DetailBarangMasukNoSeri @relation(fields: [detailBarangMasukNoSeriId], references: [id], onDelete: Cascade)

  @@map("foto_inspeksi")
}

model FotoAssembly {
  id                        Int                     @id @default(autoincrement())
  fileName                  String                  @map("file_name") @db.VarChar(255)
  fileUrl                   String                  @map("file_url") @db.VarChar(500)
  fileSize                  Int                     @map("file_size")
  fileType                  String                  @map("file_type") @db.VarChar(100)
  keterangan                String?
  isActive                  Boolean                 @default(true) @map("is_active")
  createdAt                 DateTime                @default(now()) @map("created_at")
  updatedAt                 DateTime                @updatedAt @map("updated_at")
  detailBarangMasukNoSeriId Int                     @map("detail_barang_masuk_no_seri_id")
  detailBarangMasukNoSeri   DetailBarangMasukNoSeri @relation(fields: [detailBarangMasukNoSeriId], references: [id], onDelete: Cascade)

  @@map("foto_assembly")
}

model FotoPainting {
  id                        Int                     @id @default(autoincrement())
  fileName                  String                  @map("file_name") @db.VarChar(255)
  fileUrl                   String                  @map("file_url") @db.VarChar(500)
  fileSize                  Int                     @map("file_size")
  fileType                  String                  @map("file_type") @db.VarChar(100)
  keterangan                String?
  isActive                  Boolean                 @default(true) @map("is_active")
  createdAt                 DateTime                @default(now()) @map("created_at")
  updatedAt                 DateTime                @updatedAt @map("updated_at")
  detailBarangMasukNoSeriId Int                     @map("detail_barang_masuk_no_seri_id")
  detailBarangMasukNoSeri   DetailBarangMasukNoSeri @relation(fields: [detailBarangMasukNoSeriId], references: [id], onDelete: Cascade)

  @@map("foto_painting")
}

model FotoQC {
  id                        Int                     @id @default(autoincrement())
  fileName                  String                  @map("file_name") @db.VarChar(255)
  fileUrl                   String                  @map("file_url") @db.VarChar(500)
  fileSize                  Int                     @map("file_size")
  fileType                  String                  @map("file_type") @db.VarChar(100)
  keterangan                String?
  isActive                  Boolean                 @default(true) @map("is_active")
  createdAt                 DateTime                @default(now()) @map("created_at")
  updatedAt                 DateTime                @updatedAt @map("updated_at")
  detailBarangMasukNoSeriId Int                     @map("detail_barang_masuk_no_seri_id")
  detailBarangMasukNoSeri   DetailBarangMasukNoSeri @relation(fields: [detailBarangMasukNoSeriId], references: [id], onDelete: Cascade)

  @@map("foto_qc")
}

model FotoPDI {
  id                        Int                     @id @default(autoincrement())
  fileName                  String                  @map("file_name") @db.VarChar(255)
  fileUrl                   String                  @map("file_url") @db.VarChar(500)
  fileSize                  Int                     @map("file_size")
  fileType                  String                  @map("file_type") @db.VarChar(100)
  keterangan                String?
  isActive                  Boolean                 @default(true) @map("is_active")
  createdAt                 DateTime                @default(now()) @map("created_at")
  updatedAt                 DateTime                @updatedAt @map("updated_at")
  detailBarangMasukNoSeriId Int                     @map("detail_barang_masuk_no_seri_id")
  detailBarangMasukNoSeri   DetailBarangMasukNoSeri @relation(fields: [detailBarangMasukNoSeriId], references: [id], onDelete: Cascade)

  @@map("foto_pdi")
}

model PindahLokasi {
  id                        Int                      @id @default(autoincrement())
  noSeri                    String                   @map("no_seri") @db.VarChar(20)
  dariLokasi                String                   @map("dari_lokasi") @db.VarChar(100)
  keLokasi                  String                   @map("ke_lokasi") @db.VarChar(100)
  keterangan                String?
  isActive                  Boolean                  @default(true) @map("is_active")
  createdAt                 DateTime                 @default(now()) @map("created_at")
  updatedAt                 DateTime                 @updatedAt @map("updated_at")
  createdById               Int?                     @map("created_by")
  detailBarangMasukNoSeriId Int?                     @map("detail_barang_masuk_no_seri_id")
  createdBy                 User?                    @relation(fields: [createdById], references: [id])
  detailBarangMasukNoSeri   DetailBarangMasukNoSeri? @relation(fields: [detailBarangMasukNoSeriId], references: [id])

  @@map("pindah_lokasi")
}

model FotoPindahLokasi {
  id                        Int                     @id @default(autoincrement())
  fileName                  String                  @map("file_name") @db.VarChar(255)
  fileUrl                   String                  @map("file_url") @db.VarChar(500)
  fileSize                  Int                     @map("file_size")
  fileType                  String                  @map("file_type") @db.VarChar(100)
  keterangan                String?
  isActive                  Boolean                 @default(true) @map("is_active")
  createdAt                 DateTime                @default(now()) @map("created_at")
  updatedAt                 DateTime                @updatedAt @map("updated_at")
  detailBarangMasukNoSeriId Int                     @map("detail_barang_masuk_no_seri_id")
  detailBarangMasukNoSeri   DetailBarangMasukNoSeri @relation(fields: [detailBarangMasukNoSeriId], references: [id], onDelete: Cascade)

  @@map("foto_pindah_lokasi")
}

model PindahLokasiForm {
  id                        Int                      @id @default(autoincrement())
  noSeri                    String                   @map("no_seri") @db.VarChar(20)
  namaBarang                String                   @map("nama_barang") @db.VarChar(255)
  lokasiAwal                String                   @map("lokasi_awal") @db.VarChar(100)
  lokasiBaru                String?                  @map("lokasi_baru") @db.VarChar(100)
  noForm                    String?                  @map("no_form") @db.VarChar(50)
  tanggal                   DateTime                 @default(now())
  keterangan                String?
  isActive                  Boolean                  @default(true) @map("is_active")
  createdAt                 DateTime                 @default(now()) @map("created_at")
  updatedAt                 DateTime                 @updatedAt @map("updated_at")
  createdById               Int?                     @map("created_by")
  detailBarangMasukNoSeriId Int?                     @map("detail_barang_masuk_no_seri_id")
  createdBy                 User?                    @relation(fields: [createdById], references: [id])
  detailBarangMasukNoSeri   DetailBarangMasukNoSeri? @relation(fields: [detailBarangMasukNoSeriId], references: [id])

  @@map("pindah_lokasi_form")
}

model LembarKerja {
  id             Int      @id @default(autoincrement())
  jenisPekerjaan String   @map("jenis_pekerjaan") @db.VarChar(100)
  tipeMesin      String   @map("tipe_mesin") @db.VarChar(100)
  tanggal        DateTime
  versi          String   @db.VarChar(100)
  isActive       Boolean  @default(true) @map("is_active")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  @@unique([jenisPekerjaan, tipeMesin])
  @@map("lembar_kerja")
}

enum UserRole {
  inspeksi_mesin
  assembly_staff
  qc_staff
  pdi_staff
  painting_staff
  pindah_lokasi
  admin
  supervisor
}

enum UserJobType {
  staff
  supervisor
  admin
}
